name: multistage

on:
  push:
    branches:
      - main
      - master
      - develop

permissions:
  contents: write
  packages: write

env:
  DOCKER_PREFIX: ghcr.io/kidager
  CACHE_TAG: cache

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - dockerfile: docker/base.Dockerfile
            tagname: test-php-image

          - dockerfile: docker/cron.Dockerfile
            tagname: test-cron-image
            base_image_tag: base-php-image
            base_image_replace_with: test-php-image

          - dockerfile: docker/worker.Dockerfile
            tagname: test-worker-image
            base_image_tag: base-php-image
            base_image_replace_with: test-php-image

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare metadata [${{ matrix.image.tagname }}]
        id: image-metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKER_PREFIX }}/${{ matrix.image.tagname }}
          tags: |
            type=raw,value=${{ github.sha }}
            type=raw,value=latest

      - name: Build image [${{ matrix.image.tagname }}]
        uses: docker/build-push-action@v6
        env:
          CACHE_TO: type=registry,mode=max,image-manifest=true,oci-mediatypes=true,ref=${{ env.DOCKER_PREFIX }}/${{ matrix.image.tagname }}:${{ env.CACHE_TAG }}
          CACHE_FROM: type=registry,ref=${{ env.DOCKER_PREFIX }}/${{ matrix.image.tagname }}:${{ env.CACHE_TAG }}
          BUILD_CONTEXT: ${{ matrix.image.base_image_replace_with && format('{0}=docker-image://{1}/{2}', matrix.image.base_image_tag, env.DOCKER_PREFIX, matrix.image.base_image_replace_with) || null }}
        with:
          push: ${{ matrix.image.should_push || true }}
          file: ${{ matrix.image.dockerfile }}
          tags: ${{ steps.image-metadata.outputs.tags }}
          cache-from: ${{ env.CACHE_FROM }}
          cache-to: ${{ github.event_name == 'release' && env.CACHE_TO || null }}
          build-contexts: ${{ env.BUILD_CONTEXT }}
