name: multistage

on:
  push:
    branches:
      - main
      - master
      - develop

env:
  BASE_IMAGE_NAME: ghcr.io/kidager/test-php-image
  CRON_IMAGE_NAME: ghcr.io/kidager/test-cron-image
  WORKER_IMAGE_NAME: ghcr.io/kidager/test-worker-image

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare base image metadata
        id: base-image-metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.BASE_IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.sha }}

      - name: Build base image
        uses: docker/build-push-action@v6
        with:
          push: true
          file: docker/base.Dockerfile
          tags: ${{ steps.base-image-metadata.outputs.tags }}

      - name: Prepare cron image metadata
        id: cron-image-metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.CRON_IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.sha }}

      - name: Build cron image
        uses: docker/build-push-action@v6
        with:
          push: true
          file: docker/cron.Dockerfile
          build-contexts: |
            base-php-image=docker-image://${{ steps.base-image-metadata.outputs.tags }}
          tags: ${{ steps.cron-image-metadata.outputs.tags }}

      - name: Prepare worker image metadata
        id: worker-image-metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.WORKER_IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.sha }}

      - name: Build worker image
        uses: docker/build-push-action@v6
        with:
          push: true
          file: docker/worker.Dockerfile
          build-contexts: |
            base-php-image=docker-image://${{ steps.base-image-metadata.outputs.tags }}
          tags: ${{ steps.worker-image-metadata.outputs.tags }}
